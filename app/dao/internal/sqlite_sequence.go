// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// SqliteSequenceDao is the manager for logic model data accessing and custom defined data operations functions management.
type SqliteSequenceDao struct {
	gmvc.M                       // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      sqliteSequenceColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB                // DB is the raw underlying database management object.
	Table  string                // Table is the underlying table name of the DAO.
}

// SqliteSequenceColumns defines and stores column names for table sqlite_sequence.
type sqliteSequenceColumns struct {
	Name string //
	Seq  string //
}

// NewSqliteSequenceDao creates and returns a new DAO object for table data access.
func NewSqliteSequenceDao() *SqliteSequenceDao {
	columns := sqliteSequenceColumns{
		Name: "name",
		Seq:  "seq",
	}
	return &SqliteSequenceDao{
		C:     columns,
		M:     g.DB("default").Model("sqlite_sequence").Safe(),
		DB:    g.DB("default"),
		Table: "sqlite_sequence",
	}
}
