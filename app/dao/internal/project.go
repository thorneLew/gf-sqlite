// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// ProjectDao is the manager for logic model data accessing and custom defined data operations functions management.
type ProjectDao struct {
	gmvc.M                // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      projectColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB         // DB is the raw underlying database management object.
	Table  string         // Table is the underlying table name of the DAO.
}

// ProjectColumns defines and stores column names for table project.
type projectColumns struct {
	Id        string //
	Name      string //
	Path      string //
	CreatedAt string //
	UpdatedAt string //
	DeletedAt string //
	Cmd       string //
}

// NewProjectDao creates and returns a new DAO object for table data access.
func NewProjectDao() *ProjectDao {
	columns := projectColumns{
		Id:        "id",
		Name:      "name",
		Path:      "path",
		CreatedAt: "created_at",
		UpdatedAt: "updated_at",
		DeletedAt: "deleted_at",
		Cmd:       "cmd",
	}
	return &ProjectDao{
		C:     columns,
		M:     g.DB("default").Model("project").Safe(),
		DB:    g.DB("default"),
		Table: "project",
	}
}
