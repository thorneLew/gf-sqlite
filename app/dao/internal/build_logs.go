// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// BuildLogsDao is the manager for logic model data accessing and custom defined data operations functions management.
type BuildLogsDao struct {
	gmvc.M                  // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      buildLogsColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB           // DB is the raw underlying database management object.
	Table  string           // Table is the underlying table name of the DAO.
}

// BuildLogsColumns defines and stores column names for table build_logs.
type buildLogsColumns struct {
	Id        string //
	Status    string //
	CreatedAt string //
	UpdatedAt string //
	DeletedAt string //
	ProjectId string //
}

// NewBuildLogsDao creates and returns a new DAO object for table data access.
func NewBuildLogsDao() *BuildLogsDao {
	columns := buildLogsColumns{
		Id:        "id",
		Status:    "status",
		CreatedAt: "created_at",
		UpdatedAt: "updated_at",
		DeletedAt: "deleted_at",
		ProjectId: "project_id",
	}
	return &BuildLogsDao{
		C:     columns,
		M:     g.DB("default").Model("build_logs").Safe(),
		DB:    g.DB("default"),
		Table: "build_logs",
	}
}
